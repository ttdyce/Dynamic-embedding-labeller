#include <iostream>
#include <stdio.h>
#include <math.h>
#include "../StateIntercept.cpp"
#include <string.h>
using namespace std;

/*
 * ????factorization.cpp
 * ??????
 * ????:2012-11-26
 * ???????
 */

Intercept<int> j = 2; //??????j

Intercept<int> kinds(int x)
{ //????kinds
	Intercept<int> intercepts[] = {Intercept<int>(1, 3), Intercept<int>(0, 2), Intercept<int>(0, 8)};
	StateIntercept state(intercepts, sizeof(intercepts) / sizeof(intercepts[0]));

	// Intercept<int> sum(1, 3);
	if (x == 1)
	{
		state[2] = 1;
		return 0; //?????????1????1?????????0
	}
	for (state[1] = Intercept<int>(j, 2); state[1] <= sqrt(x); state[1]++) //?for????x????????1??state[1]??
		if (x % state[1] == 0)											   //??x???state[1]?????????state[1]??????????
		{
			state[0] += kinds(x / state[1]); //??????x/state[1]????
			j = state[1] + 1;				 //??????i????????x????
		}
	return state[0]; //???????????
}
int main()
{ //???
	Intercept<int> intercepts[] = {Intercept<int>(0, 2), Intercept<int>(0, 4), Intercept<int>(0, 4)};
	StateIntercept state(intercepts, sizeof(intercepts) / sizeof(intercepts[0]));

	// Intercept<int> n = 0;
	cin >> state[1]; //?????????state[1]
	for (state[0] = Intercept<int>(0, 2); state[0] < state[1]; state[0]++)
	{
		// Intercept<int> x = 0;	 //????x
		cin >> state[2];				 //??state[2]
		cout << kinds(state[2]) << endl; //??x????????kinds
		j = 2;							 //??
	}
	return 0; //?????
}
